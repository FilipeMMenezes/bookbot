def main():
    book_path = "books/frankenstein.txt"
    text = get_book_text(book_path)
    total_words = get_total_words(text)
    chars_dict = get_chars_dict(text)
    chars_sorted = chars_to_sorted_list(chars_dict)
    print(f"--- Begin report of {book_path} ---")
    print(f"{total_words} words found in document.")
    print()

    count = 0 
    for item in chars_sorted:
        if not item["char"].isalpha():
            continue
        count += 1
        print(f"The letter '{item['char']}' was found {item['num']} times.")

    print("----------------------")    
    print(f"{count} unique letters used in document.")


    print("--- End report ---")

#
def get_book_text(path):
    with open(path) as f:
        return f.read()

#
def get_total_words(text):
    words = text.split()
    return len(words)

#
def get_chars_dict(text):
    chars = {}
    for c in text:
        lowered = c.lower() #changes to lower case
        if lowered in chars:
            chars[lowered] += 1 #how many times each character was used
        else:
            chars[lowered] = 1
    return chars

#
def sort_on(d):
    return d["num"]

def chars_to_sorted_list(num_chars_dict):
    sorted_list = []
    for ch in num_chars_dict:
        sorted_list.append({"char": ch, "num": num_chars_dict[ch]})
    sorted_list.sort(reverse=True, key=sort_on)
    return sorted_list

main()


